name: Build and push :release image

on:
  push:
    tags:
      - "v*"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: check format
        run: make check_format
  build:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Restore Docker Cache Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-ratelimit-buildx

      - name: Prepare Image tag
        id: image_tag
        run: |
          TAG=${GITHUB_REF#refs/*/}
          echo "::set-output name=value::$TAG"

      - name: Docker Tests
        run: make docker_tests

      - name: Docker build & push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            envoyproxy/ratelimit:${{ steps.image_tag.outputs.value }}
            envoyproxy/ratelimit:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          platforms: linux/amd64,linux/arm64/v8

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
