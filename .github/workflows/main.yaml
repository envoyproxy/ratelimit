name: Build and push :master image

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: check format
        run: make check_format

  build:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Restore Docker Cache Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-ratelimit-buildx

      - name: Prepare Images
        id: images
        env:
          IMAGE_NAME: envoyproxy/ratelimit
        run: |
          if [[ $GITHUB_REF =~ refs/tags/* ]]; then
            tag=${GITHUB_REF#refs/tags/*}
            images="$IMAGE_NAME:$tag,$IMAGE_NAME:latest"
            echo "::set-output name=value::$images"
          else
            branch=${GITHUB_REF#refs/heads/*}
            images="$IMAGE_NAME:$branch,$IMAGE_NAME:$branch-$(git rev-parse --short HEAD)"
            echo "::set-output name=value::$images"
          fi

      - name: Docker Tests
        run: make docker_tests

      - name: Docker build & push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.images.outputs.value }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          platforms: linux/amd64,linux/arm64/v8

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  precommits:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - uses: actions/setup-go@v2
        with:
          go-version: "1.18"

      - name: run pre-commits
        run: |
          make precommit_install
          pre-commit run -a
