admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
static_resources:
  clusters:
    - name: ratelimit
      type: STRICT_DNS
      connect_timeout: 1s
      lb_policy: ROUND_ROBIN
      protocol_selection: USE_CONFIGURED_PROTOCOL
      http2_protocol_options: {}
      load_assignment:
        cluster_name: ratelimit
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ratelimit
                      port_value: 8081
    - name: mock
      connect_timeout: 1s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: mock
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: envoy-mock
                      port_value: 9999
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8888
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local mobile_token = request_handle:headers():get("mobile_token")

                          if mobile_token
                          then
                            request_handle:headers():add("plan", "mobile_sdk")
                            return
                          end

                          local account_id = request_handle:headers():get("account_id")

                          if account_id == "1111"
                          then
                            request_handle:headers():add("plan", "team")
                          elseif account_id == "2222"
                          then
                            request_handle:headers():add("plan", "professional")
                          elseif account_id == "3333"
                          then
                            request_handle:headers():add("plan", "enterprise")
                          elseif account_id == "4444"
                          then
                            request_handle:headers():add("plan", "api_boost")
                          end
                        end
                  - name: envoy.filters.http.ratelimit
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                      domain: rl
                      request_type: external
                      stage: 0
                      rate_limited_as_resource_exhausted: true
                      failure_mode_deny: false
                      enable_x_ratelimit_headers: DRAFT_VERSION_03
                      rate_limit_service:
                        grpc_service:
                          envoy_grpc:
                            cluster_name: ratelimit
                        transport_api_version: V3
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_response(response_handle)
                          local status_code = response_handle:headers():get(":status")

                          if status_code == "429" then
                            -- Add a custom header
                            response_handle:headers():add("x-custom-header", "Rate limit triggered")

                            ---- Set a JSON body
                            response_handle:headers():replace("content-type", "application/json")
                            local body = '{"error": "rate_limit_exceeded", "retry_after": 60}'
                            response_handle:body(true):setBytes(body)
                          end
                        end
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                route_config:
                  name: route
                  virtual_hosts:
                    - name: backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: /api
                          route:
                            cluster: mock
                            rate_limits:
                              - actions:
                                  - request_headers:
                                      header_name: "account_id"
                                      descriptor_key: "account_id"
                              - actions:
                                  - request_headers:
                                      header_name: "account_id"
                                      descriptor_key: "account_id"
                                  - request_headers:
                                      header_name: "plan"
                                      descriptor_key: "plan"
